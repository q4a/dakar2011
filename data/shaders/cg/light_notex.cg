#include "common.cg"

void main_v( float4 vPosition 	: POSITION,
             float4 vColor	: COLOR0,
             float3 vNormal	: NORMAL,

             out float4 oPosition	: POSITION,
             out float4 color	: COLOR0,
             out float4 acolor	: COLOR1,
             out float3 objPos: TEXCOORD1,
             out float3 oNormal: TEXCOORD2,

             uniform float4x4 mWorldViewProj,
             uniform float4x4 mWorld,
             uniform float4x4 mInvWorld,
//             uniform float4x4 mTransWorld,
             uniform float3 mLightColor,
             uniform float3 mLightPos
             //uniform float coll_tick
)
{
  //coll_effect(coll_tick, vPosition);
  oPosition = mul(mWorldViewProj, vPosition);
  oNormal = vNormal;
  //objPos = vPosition.xyz;
  objPos = mul(mWorld, vPosition).xyz;
  //objPos.x = 3174.0;
  //objPos.z = 115.0;
  //objPos = mul(mViewProj, vPosition);
  //objPos = oPosition.xyz;

  float3 normal = mul(float4(vNormal,0.0), mInvWorld).xyz;
	
  // renormalize normal 
  normal = normalize(normal);
	
  // position in world coodinates
//  float3 worldpos = mul(mTransWorld, vPosition);
  float3 worldpos = objPos;

  //objPos = worldpos;
	
  // calculate light vector, vtxpos - lightpos
  float3 L = normalize(mLightPos - float3(0.0, 0.0, 0.0));

  // calculate light color 
  float3 tmp = mLightColor * max(dot(normal, L), 0.0);

  color = float4(tmp, 1.0);
  acolor = vColor;
}

void main_f( float4 color	: COLOR0,
             float4 acolor	: COLOR1,
             float3 objPos	: TEXCOORD1,
             float3 normal	: TEXCOORD2,
             uniform float3 clightPos,
             uniform float3 clightDir,
             uniform float3 eyePositionF,
             uniform float clight,
             uniform float day_multi,
             uniform float ov_limit,
             uniform float etick,
             out float4 oColor	: COLOR0
)
{
  float4 col = acolor;  // sample color map
  float4 multip = calc_multip(color, 0.5);
  float3 diffuseLight = float3(0.0, 0.0, 0.0);

  // multiply with diffuse and do other senseless operations
  oColor = multip * col;
  //(color + multip) * col;
  //oColor.xyz = (color + float3(0.2, 0.2, 0.2)) * col.xyz;
  oColor.xyz *= 2.0;
  oColor.a = 1.0;

  spotAttenLighting(clightPos, clightDir, objPos, normal, day_multi, diffuseLight);
  if (clight>0.0) oColor.xyz = oColor.xyz * diffuseLight;

  // fog stuff  
  //add_fog(eyePositionF, objPos, oColor);
  add_fog_tra(eyePositionF, objPos, oColor, ov_limit, etick);

  oColor = day_effect(oColor, col, day_multi);
}
